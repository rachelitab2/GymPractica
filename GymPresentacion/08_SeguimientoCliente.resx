<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="sqlCommand1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAnYSURBVHhe7d1/
        bJR3HQdwHDOZLmqMMJ2QQKYmxr80S7aM27KStbS0pSALkT6lxyDKNtmPRGdMnIOyCcJwkx9tGYNCZGxw
        sBnjlBhAB01AzKTIEg3+iMbgjD9C5pZNNjf6MUVLjuf6664UOu71St7/PN+Hu+e/9/uOC4wZAwAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACXh4kbYsLEJ+JT6esAwGXo4+ui8f0r4/UxyyJ6ctWKeOva
        NfHN9H0AwLtAQ0PDXdOnT/99dXX1G7W1tX+bMWPGxoqKiqvy77l2Tdw59pHo7i3/3rxnWcQ1a2ND/r0A
        wChXV1e3t7KyMtKpqak51dDQ8NGee/orfyMAAN6F6urqDqaLPzUCXp28+h9fH6j880fAx9bE+vR7AACj
        SH19fWd+2VdVVXXX1tYeqq6uPt177YY718fYh7sLyr6/XLEsYkJbfDb9XgDAKDB79uxt6fJvaGhY+P+z
        STU1Na//r/wLS36wTGiLqen3AwAusSRJHkmSJGbNmlVQ/r0+seovDxbzyb834x6PA/mvAwCMAr3l35uZ
        M2eerq+vX5B/z2A/+OsvH3k8juS/DgAwCjQ2Ni7JL/8kSf6VJMkN+fcofwC4jMybN68iSZLu/PKfO3fu
        jfn3XKzyj4Xt10V2/b2RbdsT2bbfxfzW78bCjg+k7wMAhilJkh155f9quvxv2hFTJrfHm+lyHyzj18Sh
        /NfpS1S0XBl3rK+IbNvqyLb+JrKt0UeeT/85AGCYkiR5sXcANDU1PZp/1lP+mVy8lslFTN5QWPL9ZaBP
        /rFg3fhobm2ObGsusq2v9FH4hWnecE36dQCAYUiSZE/eNwAnGhsbx/Vczy//3gxlBPRX/tHcNiOyrYci
        23qmoOAHy7y2T6ZfDwAYhiRJ7kj9APD4re1/mJ4u/6GMgH7Lf37rbSUVvwEAACNjzpw5Y5Mk+XHvALj9
        npa4eeeZf6eL/7wR0D708u8Rzeu/V1DqxcQAAIALb86cOe9LkmRfT/nf8vTpgsLvK/kjYKDy7xHzW39Y
        UOrFxAAAgJGR6fjn1MzOM2+ki36gTGob4q/9DQAAGH36+sHfUDJ1d6xtfyk+PFhO3f/03lcWb4tS89qi
        rZ9OPzMAMAyllv/d+yI6jg0tSzsjvrKv9Ox86o/Z9HMDACW6aUd8rpTyX1xE+V+IAbB9x8kk/ewAQIky
        uTicLvfBUmz5X4gBsOrA21XpZwcASjBtW1ydycWZdMEPlGK+9r+QA2B5Z9yWfn4AoATX74oPZXLRnS75
        /lLKJ38DAABGocyuOJ4u+r7SvCcOp0u9mBgAADCKZHIxNZOL/6QLP5WHO47Fo+lSLyYGAACMMlN2RV0m
        F2/2Ufxxcy5W9dwz0ADYfPSd+NZTB2PFjsOxuau74Pyx50/Ewofa475n/1pQ7Pf94FRkV34/7tp2ouDM
        AACAEdbXCOgt/x4DDYAHW5899x8JLdu677yzdftORlPTvKitrY26mbcXFHt946KorKyMqurpce9zfy84
        NwAAYITdkotZmVz0/FPA3VNysTT/bKABcP+Sx84NgK+t3HTe2fJnDp293jMAqqqqUsXefbb8e/PFJ35R
        UPwGAABcBBXPxLgpz8Wk9PVSB8CKvAEwbdq0AQfAlzYaAAAwqhgAAFCGDAAAKEMGAACUIQMAAMqQAQAA
        ZcgAAIAyZAAAQBkyAACgDBkAAFCGDAAAKEMGAACUIQMAAMqQAQAAZcgAAIAyZAAAQBkyAACgDBkAAFCG
        DAAAKEMDDYBvrN15bgAs3bTnvLM1P/lTNDU1nR0AtTM+X1DsdV9YcLb8q6ZVx+JdLxecGwAAcAkNNACe
        fPGtWPrkj2LZlr2x+eg7Beerdh+N7AMr48vbf1tQ7PfsfjmSJVtj0aajBWcGAABcYlu6Ykm62IvJ0s7C
        Ui8m3+mMz6SfCQAYYZu7ojld6sVkOAPggZ9Gd8sLcWX6mQCAEbalK8Z3HIu308U+1AxnADx0IP6cfh4A
        4CLp+FVsSBf7UFPyANgfsfxwJOlnAQAuku1H4oMdx+LX6XIfSkodAC0H42fp5wAALrJNx2NiR1ccTRf8
        YCl6AOyPaOmMAy0RV6SfAQC4BDb+Mt67pSvuLmYIDHUAfHX/2b/zP+lrfwAYxbYdj6u3vBTXDZbVP48b
        VxyOWwfKt4/E9S0vxFXp9wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAS+S/sGRJTtDBoHwA
        AAAASUVORK5CYII=
</value>
  </data>
</root>