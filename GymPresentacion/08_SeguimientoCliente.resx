<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="sqlCommand1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAogSURBVHhe7d1r
        jFR3HQZgLDVBGzVGqJeSQKomxk+aJm2ENl1SloXdZUEaIsuySyFKW+kl0RoTK7C0glBs5U4pt0hpubXG
        WCUG1AIJiKmgNNHgJRqDNV5CaptWWlv253/WMzjMziyzF2Bhnid5P+z5D2fOt/edzWQZBAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABXiOHr4rrhj8fHsx8BgCvZR1ZG87uXxGuDFkbkMmRxvPnh5fH1
        7BgAuJw0NTXdNWHChN/X1dW9Xl9f/7eJEyeur6mpGZIdd0pFf+fgh6MjX/75vCPl2hWxLnsZAHA5aGho
        2Dt27Ngozvjx40+lYfDB3GvKlX8+RgAAXEZS+R8oVf75pBHwyshl//hqd+WfT24EfGh5rMpuDQAMRI2N
        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
        0H8BsGRJTpOgwrYAAAAASUVORK5CYII=
</value>
  </data>
</root>